/* ========== ベース ========== */
* { box-sizing: border-box; }
html, body { height: 100%; }
body {
  margin: 0;
  font-family: "Noto Sans JP", sans-serif;
  color: #fff;
}

/* 背景は擬似要素で“本当の固定” */
body::before{
  content:"";
  position: fixed;
  inset: 0;
  z-index: -1;
  background:
    linear-gradient(rgba(0,0,0,.3), rgba(0,0,0,.3)),
    url("./background.jpg") center/cover no-repeat;
  will-change: transform;
  transform: translateZ(0);
}

/* ========== レイアウト ========== */
.chat-container {
  display: flex;
  flex-direction: column;
  min-height: 100dvh;                 /* 画面ぶんの高さ（アドレスバー変動に強い） */
  background-color: rgba(0,0,0,0.5);
  backdrop-filter: blur(3px);
  padding: 16px;
}

/* ヘッダー（上の余白も追加） */
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 14px;
  opacity: 0.9;
  margin-bottom: 20px;                /* ← 要望どおり拡張 */
}

/* チャット本文だけスクロール */
.chat {
  flex: 1;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  margin-top: 10px;
  padding: 0 10px 24px;               /* 下にフッター分の余白 */
}

/* ========== メッセージ ========== */
.msg {
  display: grid;
  grid-template-columns: 48px 1fr;    /* アバター + 本文 */
  gap: 12px;
  align-items: start;
  margin-bottom: 28px;
}
.msg.switch { margin-top: 8px; margin-bottom: 36px; }

.avatar {
  width: 44px; height: 44px;
  border-radius: 50%;
  object-fit: cover;
  background: rgba(255,255,255,0.25);
  box-shadow: 0 2px 10px rgba(0,0,0,0.35);
  flex-shrink: 0;
}

.bubble {
  background: rgba(0,0,0,0.35);
  border-radius: 14px;
  padding: 12px 14px;
  backdrop-filter: blur(.5px);
}
.name { font-weight: 600; font-size: 15px; margin: 0 0 2px; }
.time { font-size: 12px; opacity: .7; margin: 0 0 8px; }
.text { font-size: 14px; margin: 0; line-height: 1.9; }
.green { color: #00ff7f; font-weight: 700; }

/* スクロールバー控えめ */
.chat::-webkit-scrollbar { width: 6px; }
.chat::-webkit-scrollbar-thumb { background: rgba(255,255,255,.3); border-radius: 3px; }
.chat::-webkit-scrollbar-thumb:hover { background: rgba(255,255,255,.5); }

/* ========== フッター（固定しない） ========== */
.footer{
  position: relative;                 /* ← fixed/sticky は使わない */
  background: none;
  -webkit-backdrop-filter: none; backdrop-filter: none;
  text-align: center;
  padding: 24px 0 calc(60px + env(safe-area-inset-bottom)); /* ← 下余白たっぷり */
}
a.next, a.prev{
  color:#fff; text-decoration:none;
  font-size:16px; margin:0 24px;
  padding:8px 16px; border-radius:20px; border:1px solid #fff;
  opacity:.8; transition: all .2s ease;
  display:inline-block; min-width:88px; min-height:40px; line-height:40px; /* タップしやすく */
}
a.next:hover, a.prev:hover{ opacity:1; background:rgba(255,255,255,.2); }

/* ========== モバイル最適化（～640px） ========== */
@media (max-width: 640px){
  .chat-container{ padding:12px; backdrop-filter: blur(2px); }
  .msg{ grid-template-columns:40px 1fr; gap:10px; margin-bottom:22px; }
  .avatar{ width:38px; height:38px; }
  .name{ font-size: clamp(13px, 3.6vw, 15px); }
  .time{ font-size: clamp(11px, 3.2vw, 12px); }
  .text{ font-size: clamp(13px, 3.8vw, 15px); line-height:1.95; }
  .chat{ padding-bottom: 28px; }
  .footer{ padding: 28px 0 calc(70px + env(safe-area-inset-bottom)); }
}

/* === iOSで背景が拡大して見える現象の修正 === */
body::before {
  transform: none !important;         /* ← Safariのズーム補正防止 */
  background-attachment: scroll !important; /* ← fixedの代替で安定描画 */
  background-position: center center !important;
  background-size: cover !important;
  will-change: auto !important;
}

/* --- iOSの背景ズーム対策（小さいビューポート基準に固定） --- */
body::before{
  position: fixed;
  top: 0; left: 0;
  width: 100vw;
  height: 100svh !important;           /* ← ここがキモ */
  background-position: center center !important;
  background-size: cover !important;
  background-attachment: scroll !important; /* fixedは使わないほうが安定 */
  transform: none !important;               /* GPU最適化をオフに */
  will-change: auto !important;
}

/* 画面本体の“縦”も small-viewport 基準に */
.chat-container{
  min-height: 100svh !important;       /* ← 100dvh を上書き */
}

/* 任意：スクロール時の再レイアウト揺れをさらに抑える */
@supports (height: 100svh) {
  html, body { height: auto !important; }
}
